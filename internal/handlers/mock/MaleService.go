// Code generated by mockery v2.39.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MaleService is an autogenerated mock type for the MaleService type
type MaleService struct {
	mock.Mock
}

type MaleService_Expecter struct {
	mock *mock.Mock
}

func (_m *MaleService) EXPECT() *MaleService_Expecter {
	return &MaleService_Expecter{mock: &_m.Mock}
}

// SendMail provides a mock function with given fields: mail
func (_m *MaleService) SendMail(mail string) error {
	ret := _m.Called(mail)

	if len(ret) == 0 {
		panic("no return value specified for SendMail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(mail)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MaleService_SendMail_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendMail'
type MaleService_SendMail_Call struct {
	*mock.Call
}

// SendMail is a helper method to define mock.On call
//   - mail string
func (_e *MaleService_Expecter) SendMail(mail interface{}) *MaleService_SendMail_Call {
	return &MaleService_SendMail_Call{Call: _e.mock.On("SendMail", mail)}
}

func (_c *MaleService_SendMail_Call) Run(run func(mail string)) *MaleService_SendMail_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MaleService_SendMail_Call) Return(_a0 error) *MaleService_SendMail_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MaleService_SendMail_Call) RunAndReturn(run func(string) error) *MaleService_SendMail_Call {
	_c.Call.Return(run)
	return _c
}

// NewMaleService creates a new instance of MaleService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMaleService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MaleService {
	mock := &MaleService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
